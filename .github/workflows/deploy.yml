name: Deploy with Docker

on:
  push:
    branches:
      - main

jobs:
  # Build Job: Docker 이미지 빌드 및 푸시
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create .env.local file from Secrets
        run: |
          echo "NEXT_PUBLIC_SPRINGBOOT_URL=${{ secrets.NEXT_PUBLIC_SPRINGBOOT_URL }}" >> .env.local
          echo "NEXT_PUBLIC_S3_URL=${{ secrets.NEXT_PUBLIC_S3_URL }}" >> .env.local
          echo "NEXT_PUBLIC_WEBSOCKET_URL=${{ secrets.NEXT_PUBLIC_WEBSOCKET_URL }}" >> .env.local

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build --no-cache -t seuo/wannago-fe-image:latest .
          docker push seuo/wannago-fe-image:latest

  # Deploy Job: 빌드 후 배포
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH Key
        run: |
          echo "${{ secrets.PEM_KEY }}" | base64 --decode > private-key.pem
          chmod 600 private-key.pem

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: private-key.pem
          script: |
            cd ~/wannago-deploy || mkdir ~/wannago-deploy && cd ~/wannago-deploy

            # 🔥 기존 컨테이너 중복 방지용 정리
            docker stop wannago_fe || true
            docker rm wannago_fe || true
            docker stop nginx || true
            docker rm nginx || true

            # 최신 프론트엔드 이미지 pull
            docker pull seuo/wannago-fe-image:latest

            # 🧾 docker-compose.yml 생성
            cat <<EOF > docker-compose.yml
            version: "3.8"

            services:
              frontend:
                container_name: wannago_fe
                image: seuo/wannago-fe-image:latest
                restart: always
                expose:
                  - "3000"
                networks:
                  - frontend-net

              nginx:
                image: nginx:latest
                container_name: nginx
                ports:
                  - "80:80"
                volumes:
                  - ./nginx.conf:/etc/nginx/nginx.conf:ro
                depends_on:
                  - frontend
                networks:
                  - frontend-net

            networks:
              frontend-net:
                driver: bridge
            EOF

            # 🛠️ nginx.conf 생성 (Next.js 3000 포트로 프록시)
            cat <<EOF > nginx.conf
            events {}
            http {
              server {
                listen 80;
                location / {
                  proxy_pass http://frontend:3000;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
                }
              }
            }
            EOF

            docker compose down
            docker compose up -d
